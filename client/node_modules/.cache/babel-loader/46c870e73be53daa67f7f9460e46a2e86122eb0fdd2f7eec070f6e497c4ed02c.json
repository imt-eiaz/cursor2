{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// Set up axios defaults\nuseEffect(()=>{if(token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);// Verify token validity\nverifyToken();}else{setLoading(false);}},[token]);const verifyToken=async()=>{try{// You could add a token verification endpoint here\n// For now, we'll just check if the token exists\nif(token){const userData=JSON.parse(localStorage.getItem('user'));setUser(userData);}}catch(error){console.error('Token verification failed:',error);logout();}finally{setLoading(false);}};const login=async(username,password)=>{try{const response=await axios.post('http://localhost:5000/api/auth/login',{username,password});const{token:newToken,user:userData}=response.data;setToken(newToken);setUser(userData);localStorage.setItem('token',newToken);localStorage.setItem('user',JSON.stringify(userData));axios.defaults.headers.common['Authorization']=\"Bearer \".concat(newToken);return{success:true};}catch(error){var _error$response,_error$response$data;console.error('Login error:',error);return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Login failed'};}};const register=async(username,email,password)=>{try{const response=await axios.post('http://localhost:5000/api/auth/register',{username,email,password});return{success:true,message:response.data.message};}catch(error){var _error$response2,_error$response2$data;console.error('Registration error:',error);return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Registration failed'};}};const logout=()=>{setToken(null);setUser(null);localStorage.removeItem('token');localStorage.removeItem('user');delete axios.defaults.headers.common['Authorization'];};const value={user,token,loading,login,register,logout,isAuthenticated:!!token};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","concat","verifyToken","userData","JSON","parse","error","console","logout","login","username","password","response","post","newToken","data","setItem","stringify","success","_error$response","_error$response$data","register","email","message","_error$response2","_error$response2$data","removeItem","value","isAuthenticated","Provider"],"sources":["C:/Projects in C/cursor2/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // Verify token validity\r\n      verifyToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const verifyToken = async () => {\r\n    try {\r\n      // You could add a token verification endpoint here\r\n      // For now, we'll just check if the token exists\r\n      if (token) {\r\n        const userData = JSON.parse(localStorage.getItem('user'));\r\n        setUser(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Token verification failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n        username,\r\n        password\r\n      });\r\n\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n        username,\r\n        email,\r\n        password\r\n      });\r\n\r\n      return { success: true, message: response.data.message };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!token\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}